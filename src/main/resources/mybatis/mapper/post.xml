<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.dao.PostDao">
  
  <insert id="insertPost"
    parameterType="Post">
    <selectKey keyProperty="postId" resultType="Integer" order="BEFORE">
      <!--Insert 실행전 상태의 postId값의 자바 객체를 가져온 후 시퀀스 발동-->
      select seq_post_id.nextval from dual
    </selectKey>

    insert into posts (
      post_id, post_title, post_content, post_like_count, created_at, is_request, user_id
      <if test="isRequest == 'Y'"> <!--isRequest가 Y일 경우만 사용-->
        , wapplyended_at, walkstarted_at, walkended_at
      </if>
    )
    values (
      #{postId}, #{postTitle}, #{postContent}, 0, SYSTIMESTAMP, #{isRequest}, #{postUserId}
      <if test="isRequest == 'Y'">
        , #{wApplyEndAt}, #{walkStartedAt}, #{walkEndedAt}
      </if>
    )
  </insert>

  <insert id="insertPostImage"
    parameterType="Post">
    <selectKey keyProperty="postImageId" resultType="Integer" order="BEFORE">
      select seq_post_image_id.nextval from dual
    </selectKey>

    insert into post_images (
      post_image_id, post_attach_oname, post_attach_type, post_attach_data, created_at, post_id)
    values (
      #{postImageId}, #{postAttachOname}, #{postAttachType}, #{postAttachData}, SYSTIMESTAMP, #{postId}
    )
  </insert>
  
  <select id="selectByPostId"
    parameterType="Integer"
    resultType="Post">
    select
      post_id, post_title, post_content, post_likge_count, created_at, is_request, user_id as postUserId,
      wapplyended_at, walkstarted_at, walkended_at
    from posts
    where post_id = #{post_id}
  </select>
  
  <select id="selectAllPostByUserId"
    parameterType="Integer"
    resultType="Post">
    select 
      post_id, post_title, post_content, post_like_count, created_at, is_request, user_id as postUserId,
      wapplyended_at, walkstarted_at, walkended_at
    from posts
    where user_id = #{postUserId}
  </select>

  <select id="selectByPage"
    parameterType="Pager"
    resultType="Post"> <!--resultType은 하나의 행을 리턴하기 때문에 List<>가아닌 Post를 씀-->
    <![CDATA[
    select rnum, post_id, post_title, post_content, post_like_count, user_id as postUserId, created_at
    from (
        select rownum as rnum, post_id, post_title, post_content, post_like_count, user_id as postUserId, created_at
        from (
            select post_title, post_content, post_like_count, user_id as postUserId, created_at
            from  posts
            order by post_id desc
        )
        where rownum <= #{endRowNo}
    )
    where rnum >= #{startRowNo} ]]>
  </select>

  <update id="update"
    parameterType="Post">
    update posts
    set post_title = #{postTitle},
        post_content = #{postContent},
        is_request = #{isRequest}
        <if test="isRequest == 'Y'">
          , wapplyended_at = #{wApplyEndAt}
          , walkstarted_at = #{walkStartedAt}
          , walkended_at = #{walkEndedAt}
        </if>
    where post_id = #{value}
  </update>

  <update id="updatePostLikecount"
    parameterType="int">
    update posts
    set post_like_count = post_like_count + 1
    where post_id = #{value}
  </update>

  <delete id="delete"
    parameterType="Integer">
    delete from posts
    where post_id = #{value}
  </delete>

  <select id="countAll"
    resultType="int">
    select count(*)
    from posts
  </select>
  
  <select id="countAllByUserId"
    parameterType="Integer"
    resultType="int">
    select count(*)
    from posts
    where user_id = #{value}
  </select>

</mapper>
