<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.dao.WalkDao">
  
    <!-- 1:1 산책 신청 -->
    <insert id="insertWalkApply" parameterType="Walk">
        <selectKey keyProperty="requestOneId" resultType="Integer" order="BEFORE"> 
            select seq_wone_requests_request_one_id.nextval from dual 
        </selectKey> 

        insert into wone_requests ( request_one_id, request_user_id, receive_user_id, created_at, rstatus ) 
        values ( #{requestOneId}, #{requestUserId}, #{receiveUserId}, SYSTIMESTAMP, #{rstatus} ) 
    </insert>

    <!-- 사용자 아이디로 완료된 1:1 산책 목록 불러오기 -->
    <select id="selectAllWalkByUserId" parameterType="Integer" resultType="Walk">
        <![CDATA[
        select rnum, request_one_id, request_user_id, receive_user_id, created_at, rstatus, walkstarted_at, walkended_at
        from (
            select rownum as rnum, request_one_id, request_user_id, receive_user_id, created_at, rstatus, walkstarted_at, walkended_at
            from (
                select request_one_id, request_user_id, receive_user_id, created_at, rstatus, walkstarted_at, walkended_at
                from wone_requests
                where ( receive_user_id = #{userId} or request_user_id = #{userId} )
                    and walkended_at is not null
                order by walkended_at desc
            )
            where rownum <= 10
        )
        where rnum >= 1
        ]]>
    </select>

    <!-- 1:1 산책 식별 번호로 완료된 산책 불러오기 -->
    <select id="selectEndedWalkByRequestOneId" parameterType="Integer" resultType="Walk">
        select request_one_id, request_user_id, receive_user_id, created_at, rstatus, walkstarted_at, walkended_at
        from wone_requests
        where request_one_id = #{requestOneId} 
            and walkended_at is not null
    </select>

    <!-- 사용자 아이디로 1:1 산책 신청받은 내역 불러오기 -->
    <select id="selectAllWalkApplyByReceiveUserId" parameterType="Integer" resultType="Walk">
        <![CDATA[
        select rnum, request_one_id, request_user_id, receive_user_id, created_at, rStatus
        from (
            select rownum as rnum, request_one_id, request_user_id, receive_user_id, created_at, rStatus
            from (
                select request_one_id, request_user_id, receive_user_id, created_at, rStatus
                from wone_requests
                where receive_user_id = #{receiveUserId}
                order by created_at desc
            )
            where rownum <= 10
        )
        where rnum >= 1
        ]]>
    </select>

    <!-- 사용자 아이디로 1:1 산책 신청한 내역 불러오기 -->
    <select id="selectAllWalkApplyByRequestUserId" parameterType="Integer" resultType="Walk">
        <![CDATA[
            select rnum, request_one_id, request_user_id, receive_user_id, created_at, rstatus
            from (
                select rownum as rnum, request_one_id, request_user_id, receive_user_id, created_at, rstatus
                from (
                    select request_one_id, request_user_id, receive_user_id, created_at, rstatus
                    from wone_requests
                    where request_user_id = #{requestUserId}
                    order by created_at desc
                )
                where rownum <= 10
            )
            where rnum >= 1
        ]]>
    </select>

    <!-- 1:1 산책 신청 상태 변경 -->
    <update id="updateWalkApplyStatus">
        update wone_requests
        set rstatus = #{rstatus}
        where request_one_id = #{requestOneId}
            and receive_user_id = #{receiveUserId}
    </update>

    <!-- 1:1 산책 시작 -->
    <update id="updateWalkStartedAt">
        update wone_requests
        set walkstarted_at = SYSTIMESTAMP
        where request_one_id = #{requestOneId} 
            and ( receive_user_id = #{userId} or request_user_id = #{userId} )
    </update>

    <!-- 1:1 산책 종료 -->
    <update id="updateWalkEndedAt">
        update wone_requests
        set walkended_at = SYSTIMESTAMP
        where request_one_id = #{requestOneId}
            and ( receive_user_id = #{userId} or request_user_id = #{userId} )
            and walkstarted_at is not null
    </update>

    <!-- 1:1 산책 기록 삭제 -->
    <delete id="deleteWalk" parameterType="Integer">
        delete from wone_requests
        where request_one_id = #{requestOneId}
            and ( receive_user_id = #{userId} or request_user_id = #{userId} )
    </delete>

</mapper>
